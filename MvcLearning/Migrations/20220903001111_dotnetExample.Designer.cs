// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcLearning.Models.Classes;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MvcLearning.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220903001111_dotnetExample")]
    partial class dotnetExample
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.7.22376.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MvcLearning.Models.Classes.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AdminId"));

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.Property<string>("permission")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("Char");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("Varchar");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Category", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("categoryId"));

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.HasKey("categoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Currrent", b =>
                {
                    b.Property<int>("currentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("currentId"));

                    b.Property<string>("currentCity")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("Varchar");

                    b.Property<string>("currentMail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Varchar");

                    b.Property<string>("currentName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.Property<string>("currentSurname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.Property<int>("salesMovementId")
                        .HasColumnType("integer");

                    b.HasKey("currentId");

                    b.HasIndex("salesMovementId");

                    b.ToTable("Currrents");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Department", b =>
                {
                    b.Property<int>("departmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("departmentId"));

                    b.Property<string>("departmentName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.HasKey("departmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Expenses", b =>
                {
                    b.Property<int>("expenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("expenseID"));

                    b.Property<DateTime>("expenseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("expenseDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar");

                    b.Property<decimal>("expensePrice")
                        .HasColumnType("numeric");

                    b.HasKey("expenseID");

                    b.ToTable("Expensies");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.FaturaKalem", b =>
                {
                    b.Property<int>("faturaKalemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("faturaKalemId"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("numeric");

                    b.Property<int>("Miktar")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("numeric");

                    b.Property<int>("invoiceId")
                        .HasColumnType("integer");

                    b.HasKey("faturaKalemId");

                    b.HasIndex("invoiceId");

                    b.ToTable("FaturaKalems");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Invoice", b =>
                {
                    b.Property<int>("invoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("invoiceId"));

                    b.Property<DateTime>("invoiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("invoiceDelivery")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.Property<DateTime>("invoiceHour")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("invoiceSerialNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("Char");

                    b.Property<string>("invoiceSortNo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.Property<string>("invoiceSubmitter")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.Property<string>("taxBranch")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.HasKey("invoiceId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Personal", b =>
                {
                    b.Property<int>("personalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("personalId"));

                    b.Property<int>("departmentId")
                        .HasColumnType("integer");

                    b.Property<string>("personalImg")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Varchar");

                    b.Property<string>("personalName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.Property<string>("personalSurname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.Property<int>("salesMovementId")
                        .HasColumnType("integer");

                    b.HasKey("personalId");

                    b.HasIndex("departmentId");

                    b.HasIndex("salesMovementId");

                    b.ToTable("Personals");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("productId"));

                    b.Property<decimal>("buyPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("categoryId")
                        .HasColumnType("integer");

                    b.Property<string>("productBrand")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.Property<string>("productImg")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Varchar");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar");

                    b.Property<int>("salesMovementId")
                        .HasColumnType("integer");

                    b.Property<decimal>("sellPrice")
                        .HasColumnType("numeric");

                    b.Property<bool>("state")
                        .HasColumnType("boolean");

                    b.Property<short>("stockCounts")
                        .HasColumnType("smallint");

                    b.HasKey("productId");

                    b.HasIndex("categoryId");

                    b.HasIndex("salesMovementId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.SalesMovement", b =>
                {
                    b.Property<int>("salesMovementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("salesMovementId"));

                    b.Property<int>("count")
                        .HasColumnType("integer");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("salesMovementDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("totalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("salesMovementId");

                    b.ToTable("SalesMovements");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Currrent", b =>
                {
                    b.HasOne("MvcLearning.Models.Classes.SalesMovement", "SalesMovement")
                        .WithMany("Currrents")
                        .HasForeignKey("salesMovementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesMovement");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.FaturaKalem", b =>
                {
                    b.HasOne("MvcLearning.Models.Classes.Invoice", "Invoice")
                        .WithMany("FaturaKalems")
                        .HasForeignKey("invoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Personal", b =>
                {
                    b.HasOne("MvcLearning.Models.Classes.Department", "Department")
                        .WithMany("Personals")
                        .HasForeignKey("departmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcLearning.Models.Classes.SalesMovement", "SalesMovement")
                        .WithMany("Personals")
                        .HasForeignKey("salesMovementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("SalesMovement");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Product", b =>
                {
                    b.HasOne("MvcLearning.Models.Classes.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcLearning.Models.Classes.SalesMovement", "SalesMovement")
                        .WithMany("Products")
                        .HasForeignKey("salesMovementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("SalesMovement");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Department", b =>
                {
                    b.Navigation("Personals");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.Invoice", b =>
                {
                    b.Navigation("FaturaKalems");
                });

            modelBuilder.Entity("MvcLearning.Models.Classes.SalesMovement", b =>
                {
                    b.Navigation("Currrents");

                    b.Navigation("Personals");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
